/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllMitigacao;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author Racca
 */
public class mitigacao extends javax.swing.JPanel {

    private ControllMitigacao mitigacao = new ControllMitigacao();
    
    private main principal;
    /**
     * 
     * Creates new form mitigacao
     */
    public mitigacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNome = new javax.swing.JTextField();
        jLabelNome = new javax.swing.JLabel();
        jScrollPaneDescricao = new javax.swing.JScrollPane();
        jTextAreaDescricao = new javax.swing.JTextArea();
        jLabelDescricao = new javax.swing.JLabel();
        jLabelRiscos = new javax.swing.JLabel();
        jScrollPaneEficacias = new javax.swing.JScrollPane();
        jTableEficacias = new javax.swing.JTable();
        jButtonSalvar = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jButtonAdicionarEficacia = new javax.swing.JButton();
        jButtonExcluirEficacia = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jScrollPaneMitigacoes = new javax.swing.JScrollPane();
        jListMitigacoes = new javax.swing.JList<>();
        jLabelMitigacoes = new javax.swing.JLabel();
        jButtonEditarmitigacao = new javax.swing.JButton();
        jButtonCriar = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyPressed(evt);
            }
        });

        jLabelNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNome.setText("Nome Mitigação");

        jTextAreaDescricao.setColumns(20);
        jTextAreaDescricao.setRows(5);
        jScrollPaneDescricao.setViewportView(jTextAreaDescricao);

        jLabelDescricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDescricao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDescricao.setText("Descrição");

        jLabelRiscos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelRiscos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRiscos.setText("Eficacia");

        jTableEficacias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Objeto", "Risco", "Relação OR", "Eficacia"
            }
        ));
        jTableEficacias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneEficacias.setViewportView(jTableEficacias);

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonVoltar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonAdicionarEficacia.setText("Adicionar Eficacia");
        jButtonAdicionarEficacia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarEficaciaActionPerformed(evt);
            }
        });

        jButtonExcluirEficacia.setText("Excluir Eficacia");
        jButtonExcluirEficacia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirEficaciaActionPerformed(evt);
            }
        });

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jListMitigacoes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListMitigacoes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneMitigacoes.setViewportView(jListMitigacoes);

        jLabelMitigacoes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelMitigacoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMitigacoes.setText("Mitigações");

        jButtonEditarmitigacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonEditarmitigacao.setText("Editar Mitigação");
        jButtonEditarmitigacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarmitigacaoActionPerformed(evt);
            }
        });

        jButtonCriar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCriar.setText("Criar Mitigação");
        jButtonCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPaneMitigacoes)
                                .addComponent(jLabelMitigacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(jButtonEditarmitigacao))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPaneEficacias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jScrollPaneDescricao, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelRiscos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jButtonCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jButtonExcluirEficacia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAdicionarEficacia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelMitigacoes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneMitigacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonExcluir)
                            .addComponent(jButtonEditarmitigacao)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNome)
                        .addGap(7, 7, 7)
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelRiscos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneEficacias, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonExcluirEficacia)
                    .addComponent(jButtonAdicionarEficacia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
      
        if(jTextAreaDescricao.getSelectionEnd()>1000){
            JOptionPane.showMessageDialog(null, "Limite-se a 1000 caracteres para esse campo.", "Descrição Muito Grande", JOptionPane.ERROR_MESSAGE, null);
            return;
        }
        try {
            if(mitigacao.salvarFormulario(this)){
                JOptionPane.showMessageDialog(null, "Salvo com Sucesso", "Salvo!", JOptionPane.INFORMATION_MESSAGE, null);
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao Salvar mitigacao", "Erro ao Salvar!", JOptionPane.ERROR_MESSAGE, null);
            }
        } catch (CloneNotSupportedException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Salvar mitigacao", "Erro ao Salvar!", JOptionPane.ERROR_MESSAGE, null);
        }
        
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
           if(mitigacao.voltar(principal)){
               
           }else{
                JOptionPane.showMessageDialog(null, "Erro ao voltar para tela anterior", "Erro ao Voltar!", JOptionPane.ERROR_MESSAGE, null);
            
           }

    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonAdicionarEficaciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarEficaciaActionPerformed
  
        try {
            mitigacao.adicionarEficacia(this);
        } catch (CloneNotSupportedException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Adicionar Eficacia", "Erro ao Adicionar!", JOptionPane.ERROR_MESSAGE, null);
           
        }
        
    }//GEN-LAST:event_jButtonAdicionarEficaciaActionPerformed

    private void jButtonExcluirEficaciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirEficaciaActionPerformed
        try {
            if(mitigacao.excluirEficacia(this)){
                JOptionPane.showMessageDialog(null, "Excluido com Sucesso", "Excluido!", JOptionPane.INFORMATION_MESSAGE, null);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao Excluir Eficacia", "Erro ao Excluir!", JOptionPane.ERROR_MESSAGE, null);        
            }
        } catch (CloneNotSupportedException ex) {
             JOptionPane.showMessageDialog(null, "Erro ao Excluir Eficacia", "Erro ao Excluir!", JOptionPane.ERROR_MESSAGE, null);        

        }
    }//GEN-LAST:event_jButtonExcluirEficaciaActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            if(mitigacao.excluirMitigacao(this)){
                JOptionPane.showMessageDialog(null, "Excluido com Sucesso", "Excluido!", JOptionPane.INFORMATION_MESSAGE, null);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao Excluir Mitigação", "Erro ao Excluir!", JOptionPane.ERROR_MESSAGE, null);        
            }
        } catch (CloneNotSupportedException ex) {
             JOptionPane.showMessageDialog(null, "Erro ao Excluir Mitigação", "Erro ao Excluir!", JOptionPane.ERROR_MESSAGE, null);        

        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyPressed
        
        if(jTextFieldNome.getText().getBytes().length>50){
           // JOptionPane.showMessageDialog(null,"Numero excessimo de Caracteres, limite de 35 caracteres","Erro na Senha",JOptionPane.ERROR_MESSAGE,null);
            char[] nome=jTextFieldNome.getText().toCharArray();
            String novoNome="";
            int i;
            for(i=0;i<51;i++){
               novoNome+=nome[i];
            }
            jTextFieldNome.setText(novoNome);
        }
    }//GEN-LAST:event_jTextFieldNomeKeyPressed

    private void jButtonEditarmitigacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarmitigacaoActionPerformed
        try {
            if(mitigacao.editarMitigacao(this)){
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao carregar mitigacao", "Erro ao carregar!", JOptionPane.ERROR_MESSAGE, null);
            }
        } catch (CloneNotSupportedException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar mitigacao", "Erro ao carregar!", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jButtonEditarmitigacaoActionPerformed

    private void jButtonCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarActionPerformed
       try {
            if(mitigacao.criarMitigacao(this)){
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao carregar mitigacao", "Erro ao carregar!", JOptionPane.ERROR_MESSAGE, null);
            }
        } catch (CloneNotSupportedException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar mitigacao", "Erro ao carregar!", JOptionPane.ERROR_MESSAGE, null);
        }
    }//GEN-LAST:event_jButtonCriarActionPerformed

    public ControllMitigacao getMitigacao() {
        return mitigacao;
    }

    public main getPrincipal() {
        return principal;
    }

    public JTable getjTableEficacias() {
        return jTableEficacias;
    }

    public JTextArea getjTextAreaDescricao() {
        return jTextAreaDescricao;
    }

    public JTextField getjTextFieldNome() {
        return jTextFieldNome;
    }

    public void setMitigacao(ControllMitigacao mitigacao) {
        this.mitigacao = mitigacao;
    }

    public void setPrincipal(main principal) {
        this.principal = principal;
    }

    public void setjTableEficacias(JTable jTableRiscos) {
        this.jTableEficacias = jTableRiscos;
    }

    public void setjTextAreaDescricao(JTextArea jTextAreaDescricao) {
        this.jTextAreaDescricao = jTextAreaDescricao;
    }

    public void setjTextFieldNome(JTextField jTextFieldNome) {
        this.jTextFieldNome = jTextFieldNome;
    }

    public JList<String> getjListMitigacoes() {
        return jListMitigacoes;
    }

    public JButton getjButtonAdicionarEficacia() {
        return jButtonAdicionarEficacia;
    }

    public JButton getjButtonCriar() {
        return jButtonCriar;
    }

    public JButton getjButtonEditarmitigacao() {
        return jButtonEditarmitigacao;
    }

    public JButton getjButtonExcluir() {
        return jButtonExcluir;
    }

    public JButton getjButtonExcluirEficacia() {
        return jButtonExcluirEficacia;
    }

    public JButton getjButtonSalvar() {
        return jButtonSalvar;
    }



    

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarEficacia;
    private javax.swing.JButton jButtonCriar;
    private javax.swing.JButton jButtonEditarmitigacao;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonExcluirEficacia;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelMitigacoes;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelRiscos;
    private javax.swing.JList<String> jListMitigacoes;
    private javax.swing.JScrollPane jScrollPaneDescricao;
    private javax.swing.JScrollPane jScrollPaneEficacias;
    private javax.swing.JScrollPane jScrollPaneMitigacoes;
    private javax.swing.JTable jTableEficacias;
    private javax.swing.JTextArea jTextAreaDescricao;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
